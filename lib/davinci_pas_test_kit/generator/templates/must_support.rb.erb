require_relative '../../../must_support_test'
require_relative '../../../generator/group_metadata'
require_relative '../../../tags'

module DaVinciPASTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include DaVinciPASTestKit::MustSupportTest

      title 'All must support elements for Profile <%= profile_name %> are observed across all instances <%= request_type.include?('request') ? 'submitted' : 'returned' %>'
      description %(
        <% if system == 'client' && request_type.include?('request') %>
        PAS client systems are required to be able to populate all
        must support elements on instances of all profiles included in <% request_type.include?('submit') ? 'Submit' : 'Inquiry' %>
        requests, including instances of the <%= profile_name %> Profile.
        This test checks all identified instances of the <%= profile_name %>
        Profile on requests sent by the client to ensure that the following
        must support elements are observed: <% end %><% if system == 'client' && request_type.include?('response') %>
        PAS client systems are required to be able to receive all
        must support elements on instances of all profiles included in <% request_type.include?('submit') ? 'Submit' : 'Inquiry' %>
        responses, including instances of the <%= profile_name %> Profile.
        This test checks all identified instances of the <%= profile_name %>
        Profile on responses sent to the client to ensure that the following
        must support elements are observed:<% end %><% if system == 'server' && request_type.include?('request') %>
        **USER INPUT VALIDATION**: This test validates input provided by the user instead of the system under test. Errors encountered will be treated as a skip instead of a failure.

        PAS server systems are required to be able to receive all
        must support elements on instances of all profiles included in <% request_type.include?('submit') ? 'Submit' : 'Inquiry' %>
        requests, including instances of the <%= profile_name %> Profile.
        This test checks all identified instances of the <%= profile_name %>
        Profile on requests sent to the server to ensure that the following
        must support elements are observed:<% end %><% if system == 'server' && request_type.include?('response') %>
        PAS server systems are required to be able to populate all
        must support elements on instances of all profiles included in <% request_type.include?('submit') ? 'Submit' : 'Inquiry' %>
        responses, including instances of the <%= profile_name %> Profile.
        This test checks all identified instances of the <%= profile_name %>
        Profile on responses returned by the server to ensure that the following
        must support elements are observed:<% end %>

<%= must_support_list_string %>
      )<%=verifies_requirements %>
      id :<%= test_id %>

      def resource_type
        '<%= resource_type %>'
      end

      def user_input_validation
        <% if system == 'server' && request_type.include?('request') %>true<% else %>false<% end %>
      end

      def self.metadata
        @metadata ||= Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        # The scratch key in MS test should be the same as the scratch key in the validation test for a given profile.
        scratch[:<%= request_type %>_resources] ||= {}
      end

      def resources_of_interest
        collection = tagged_resources(<%= request_type.include?('submit') ? 'SUBMIT_TAG' : 'INQUIRE_TAG' %>).presence || <%= resource_collection_string %>
        collection.select { |res| res.resourceType == resource_type }
      end

      run do
        perform_must_support_test(resources_of_interest)
        validate_must_support(user_input_validation)
      end
    end
  end
end
