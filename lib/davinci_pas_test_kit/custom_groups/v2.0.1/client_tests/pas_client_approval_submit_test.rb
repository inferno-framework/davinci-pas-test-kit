require_relative '../../../urls'
require_relative '../../../descriptions'
require_relative '../../../user_input_response'
require_relative '../../../session_identification'

module DaVinciPASTestKit
  module DaVinciPASV201
    class PASClientApprovalSubmitTest < Inferno::Test
      include URLs
      include UserInputResponse
      include SessionIdentification

      id :pas_client_v201_approval_submit_test
      title 'Client submits a claim using the $submit operation'
      description %(
        Inferno will wait for a prior authorization submission request
        from the client. Upon receipt, Inferno will generate and send a
        response with an approved status.
      )
      verifies_requirements 'hl7.fhir.us.davinci-pas_2.0.1@58', 'hl7.fhir.us.davinci-pas_2.0.1@62',
                            'hl7.fhir.us.davinci-pas_2.0.1@70', 'hl7.fhir.us.davinci-pas_2.0.1@202'

      input :approval_json_response,
            title: 'Claim approved response JSON',
            type: 'textarea',
            optional: true,
            description: %(
              If provided, this JSON will be sent in response to $submit requests during this test
              to indicate that the request has been approved.
              It will be updated to make creation timestamps current.
              If not provided, an approval response will be generated from the submitted Claim.
              In either case, the response will be validated against the PAS Response Bundle profile.
            )
      input :client_id,
            title: 'Client Id',
            type: 'text',
            optional: true,
            locked: true,
            description: INPUT_CLIENT_ID_LOCKED
      input :session_url_path,
            title: 'Session-specific URL path extension',
            type: 'text',
            optional: true,
            locked: true,
            description: INPUT_SESSION_URL_PATH_LOCKED
      input :smart_jwk_set,
            title: 'JSON Web Key Set (JWKS)',
            type: 'textarea',
            optional: true,
            locked: true,
            description: INPUT_JWK_SET_LOCKED

      submit_respond_with :approval_json_response

      run do
        if user_inputted_response? :approval_json_response
          assert_valid_json approval_json_response,
                            'Input "Claim approved response JSON" must be valid JSON'
        else
          add_message('info', %(
            No approved response provided in input '#{input_title(:approval_json_response)}'. Any responses to $submit
            requests will be generated by Inferno from the submitted Claim.
          ))
        end

        wait_identifier = inputs_to_wait_identifier(client_id, session_url_path)
        submit_endpoint = inputs_to_session_endpont(:submit, client_id, session_url_path)

        wait(
          identifier: wait_identifier,
          message: %(
            **Approval Workflow Test**:

            Submit a PAS request to

            `#{submit_endpoint}`

            If the optional '**#{input_title(:approval_json_response)}**' input is populated, it will
            be returned, updated with current timestamps. Otherwise, an approval response will
            be generated by Inferno using the received Claim.
          )
        )
      end
    end
  end
end
